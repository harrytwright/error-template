/**
 * @fileoverview The HTTPError classes
 * @author Harry Wright
 */

const Status = require('http-status-codes');

<%_
function between(x, min, max) {
    return x >= min && x <= max;
}
_%>

export class HTTPError extends Error {

    constructor(message, status) {
        super(message);

        this.status = status;

        this.name = Status.getReasonPhrase(status);
    }

}

<% errors.forEach(function (error) { -%>
export class <%- error.klass %> extends AnyHTTPError {

    <% if (error.status === 422 || error.status === 409 || error.status === 500) { -%>
    constructor(message, underlyingError = null) {
        super(message, <%- error.status %>);
        this.underlyingError = underlyingError;
    }
    <% } else if (between(error.status, 300, 303) || between(error.status, 307, 308) || error.status === 305) { -%>
    constructor(url) {
        super(Status.getReasonPhrase(<%- error.status %>), <%- error.status %>);
        this.redirectURL = url;
    }
    <% } else if (between(error.status, 204, 205) || error.status === 304 || error.status === 418) { -%>
    constructor() {
        super(Status.getReasonPhrase(<%- error.status %>), <%- error.status %>);
    }
    <% } else { -%>
    constructor(message) {
        super(message, <%- error.status %>);
    }
    <% } -%>

}
<% }); %>
